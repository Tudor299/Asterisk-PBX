; extensions.conf - the Asterisk dial plan
;
; Static extension configuration file, used by
; the pbx_config module. This is where you configure all your
; inbound and outbound calls in Asterisk.
;
; This configuration file is reloaded
; - With the "dialplan reload" command in the CLI
; - With the "reload" command (that reloads everything) in the CLI

[general]
static=yes
writeprotect=n
autofallthrough=no
 
[incoming]
include => internal
include => public_category3

exten => s,1,Answer()
exten => s,2,Background(vm-enter-num-to-call)
exten => s,n,WaitExten(20)

[internalsip] ;context created for defining the sip user

include => internaliax ;sip and iax2 users are able to call each other

exten => 611,1, Answer()
   same => 2, Playback(demo-echotest)
   same => 3, Echo()
   same => 4, Playback(demo-echodone)
   same => 5, Hangup()

exten => 1000,1,Dial(SIP/1000,20) ;test sip user

exten => 1661,1,Dial(SIP/1661,20) ;defining first sip user

exten => 2661,1,Dial(SIP/2661,20) ;definig second sip user

[internaliax]

include => internalsip ;sip and iax2 users are able to call each other 

exten => 2000,1,Dial(IAX2/2000,20) ;test iax2 user

exten => 3661,1,Dial(IAX2/3661,10) ;dial function for the first iax2 user
	same => 2, Authenticate(5678) ;authenticate in order to isolate iax2 funtions from sip users
	same => 3, GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?7) ;in case the channel is unavailable, go to priority 7 (receive unavailable message)
	same => 4, GotoIf($["${DIALSTATUS}" = "BUSY"]?9) ;in case the user is busy, go to priority 9 (receiver busy message)
	same => 5, GotoIf($["${DIALSTATUS}" = "NOANSWER"]?7) ;in case the iax2 user doesn't asnwer, go to priority 7 (receive unavailable message)
	same => 6, GoTo(3661,10) ;in any other case, jump over the unavailable and busy options of the VoiceMail function
	same => 7, VoiceMail(3661@voice,u) ;play the unavailable prerecorded message and start the VoiceMail (leave a message) function
	same => 8, GoTo(3661,10) ;after that, jump over the busy option of the VoiceMail function strainght to the goodbye message on priority 10
	same => 9, VoiceMail(3661@voice,b) ;in case the dial status is busy, the busy message is played and the VoiceMail function (leave a message) starts
	same => 10, Playback(vm-goodbye) ;after the caller leaves a message, the goodbye prompter is played
	same => 11, Hangup() ;the call is ended

exten => 4661,1,Dial(IAX2/4661,10) ;dial function for the first iax2 user
	same => 2, Authenticate(5678) ;authenticate in order to isolate iax2 funtions from sip users
	same => 3, GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?7) ;in case the channel is unavailable, go to priority 7 (receive unavailable message)
	same => 4, GotoIf($["${DIALSTATUS}" = "BUSY"]?9) ;in case the user is busy, go to priority 9 (receiver busy message)
	same => 5, GotoIf($["${DIALSTATUS}" = "NOANSWER"]?7) ;in case the iax2 user doesn't asnwer, go to priority 7 (receive unavailable message)
	same => 6, GoTo(4661,10) ;in any other case, jump over the unavailable and busy options of the VoiceMail function
	same => 7, VoiceMail(4661@voice,u) ;play the unavailable prerecorded message and start the VoiceMail (leave a message) function
	same => 8, GoTo(4661,10) ;after that, jump over the busy option of the VoiceMail function strainght to the goodbye message on priority 10
	same => 9, VoiceMail(4661@voice,b) ;in case the dial status is busy, the busy message is played and the VoiceMail function (leave a message) starts
	same => 10, Playback(vm-goodbye) ;after the caller leaves a message, the goodbye prompter is played
	same => 11, Hangup() ;the call is ended

[sipf] ;context created in order to facilitate the isolation of the sip functions from the iax2 functions

include => internalsip ;only include the sip user and pass this context in sip.conf (see sip.conf users' context)

exten => 100,1, Ringing() ;implementation of ringing function (mandatory)
	same => n, Wait(2) ;hear the results of the ringing function (rings for 2 seconds before answering)
	same => n, Set(TIMEOUT(absolute)=45) ;set the maximum duration of a call to 45 seconds (after this period the call will automatically end)
	same => n, Answer() ;after the ringing period, the call is automatically answered
	; the implementation of the main menu is done using the Playback function with prerecorded prompters and SayNumber function
	same => n, Playback(hello) 
	same => n, Playback(this)
	same => n, Playback(call)
	same => n, Playback(is-set-to)
	same => n, Playback(maximum)
	same => n, SayNumber(45)
	same => n, Playback(seconds)
	same => n, Background(main-menu) ;this function plays the maim menu sound prompt, but also listens for the DTMF(dual tone multi fequency) input
	;the user is faced with choosing from various options provided by the menu
	same => n, Playback(for-a-daily-wakeup-call)
	same => n, Playback(press-1)
	same => n, Playback(for-the-weather)
	same => n, Playback(press-2)
	same => n, Playback(for-billing)
	same => n, Playback(press-3)
	same => n, Playback(for-sales)
	same => n, Playback(press-4)
	same => n, Playback(for-tech-support)
	same => n, Playback(press-5)
	same => n, Playback(to-hang-up)
	same => n, Playback(press-star)
	same => n, Saynumber(5)
	same => n, Playback(seconds)
	same => n, Playback(to-enter-a-number)
	same => n, Set(TIMEOUT(response)=5) ;the user has 5 seconds to input the chosen option from the menu list
	same => n, Set(TIMEOUT(digit)=1) ;the duration between two consecutive digits in order to form a number (after 1 second, the input will be processed)
	same => n, WaitExten() ;used in combination with BackGround in order to wait for user input for a duration of maximum TIMEOUT(response)
	same => n, Hangup() ;end the call if not ended by the user or absolute timeout

 ;depending on the option from the menu chosen by the user, a different scenario will continue

 ;in the waku-up scenario, the user is asted to set up an alarm
exten => 1,1, Playback(wakeup-daily)
	same => n, Playback(enter-a-time)
	same => n, Wait(4) ;simulates the alarm settings
	same => n, Playback(thanks-for-using)
	same => n, Playback(wakeup-daily)

 ;in the second scenario, a fictional weather forecast is presented
exten => 2,1, Playback(tonight)
	same => n, Playback(will-reflect-charge-of)
	same => n, playback(rain)
	same => n, Playback(and)
	same => n, Playback(wind)
	same => n, Playback(and)
	same => n, Playback(temperature)
	same => n, SayNumber(18)
	same => n, Playback(degrees)	

 ;in the third scenario, a fictional bill is described 
exten => 3,1, Playback(billing)
	same => n, Wait(2)
	same => n, SayNumber(1500)
	same => n, Playback(euros)

 ;in the fourth scenario, another playback message is played
exten => 4,1, Playback(you-seem-impatient)

 ;in the fifth scenario, we inform the user that we don't have technical support
exten => 5,1, Playback(we-dont-have-tech-support) 

 ;the final scenario allow the user to end the call by pressing the * key
exten => *,1, Hangup()

[iaxf] ;context created in order to facilitate the isolation of the iax2 functions from the sip functions

include => internaliax ;only include the iax2 user and pass this context in iax.conf (see iax.conf users' context)

exten => 200,1, Ringing() ;implementation of the ringing function (mandatory)
	same => n, Wait(2) ;hear the results of the ringing function (ring for 2 seconds before answering)
	same => n, Answer() ;the call is automatically answered after the ringing period
	same => n, VMAuthenticate(${CALLER(num)}@voice) ;each user is asked to log in depending on its number and password (see voicemail.conf)
	same => n, VoiceMailMain(@voice) ;this is the VoiceMail menu, where the user can choose to listen to the mailbox, delete old messages and other options
	same => n, Hangup() ;the call is automatically ended after the user exits the VoiceMailMain
	
[public_category3]

exten => 4001,1,AgentCallbackLogin(,,${CALLERIDNUM}@internal)

exten => 4002,1,AgentCallbackLogin(,,1)

exten => 4000,1,Queue(markq)
